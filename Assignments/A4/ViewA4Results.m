
close all;
clearvars;
%% Front-Matter
FREQFILE = 'BallInBox/Freqs.txt';
ANTENNAFILE = 'BallInBox/Antennas_24_at_2_lambda.txt';
FWD_DIR = 'BallInBox/FwdOutput';
INV_DIR = 'BallInBox/InversionResults';
DBIM_DIR = [INV_DIR '/dbim'];
BIM_DIR = [INV_DIR '/bim'];

N_DBIM_ITERS = GetHighestMatchIndex(DBIM_DIR,'chi_iter_')+1;
N_BIM_ITERS = GetHighestMatchIndex(BIM_DIR,'chi_iter_')+1;

FREQS = dlmread(FREQFILE);
N_FREQS = length(FREQS);
TXPOS = zeros(0,2);

T = split(fileread(ANTENNAFILE),newline);
T = T(2:end);
for tt = 1:length(T)
    if(~isempty(T{tt}))
        L = str2double(split(T{tt}));
        TXPOS = [TXPOS;[L(1),L(2)]];
    end
end

%% Show Forward Solution

fwd_tri = ReadCppMatrixFromFile([FWD_DIR '/tri_tri.txt']);
fwd_tri = fwd_tri(:,1:3)+1;
fwd_pts = ReadCppMatrixFromFile([FWD_DIR '/tri_pts.txt']);
fwd_tri2pts = BuildTri2PointMap(fwd_tri);

fwd_Ez_inc_lo = ReadCppMatrixFromFile([FWD_DIR '/Ez_inc_0.txt']);
fwd_Ez_inc_hi = ReadCppMatrixFromFile([FWD_DIR '/Ez_inc_' num2str(length(FREQS)-1) '.txt']);

fwd_Ez_sct_lo = ReadCppMatrixFromFile([FWD_DIR '/Ez_sct_0.txt']);
fwd_Ez_sct_hi = ReadCppMatrixFromFile([FWD_DIR '/Ez_sct_' num2str(length(FREQS)-1) '.txt']);

fwd_Ez_tot_lo = ReadCppMatrixFromFile([FWD_DIR '/Ez_tot_0.txt']);
fwd_Ez_tot_hi = ReadCppMatrixFromFile([FWD_DIR '/Ez_tot_' num2str(length(FREQS)-1) '.txt']);

fwd_eps_r = ReadCppMatrixFromFile([FWD_DIR '/eps_r.txt']);

fwd_field_fig = figure();
set(fwd_field_fig,'Name','Forward Fields');
subplot(4,2,1);
trisurf(...
    fwd_tri,...
    fwd_pts(:,1),fwd_pts(:,2),fwd_tri2pts*real(fwd_Ez_inc_lo(:,1)),...
    'LineStyle','None');
colorbar;axis image;view(0,90);
title('Min. Freq. Ez^{inc}');
subplot(4,2,2);
trisurf(...
    fwd_tri,...
    fwd_pts(:,1),fwd_pts(:,2),fwd_tri2pts*real(fwd_Ez_inc_hi(:,1)),...
    'LineStyle','None');
colorbar;axis image;view(0,90);
title('Max. Freq. Ez^{inc}');
subplot(4,2,3);
trisurf(...
    fwd_tri,...
    fwd_pts(:,1),fwd_pts(:,2),fwd_tri2pts*real(fwd_Ez_sct_lo(:,1)),...
    'LineStyle','None');
colorbar;axis image;view(0,90);
title('Min. Freq. Ez^{sct}');
subplot(4,2,4);
trisurf(...
    fwd_tri,...
    fwd_pts(:,1),fwd_pts(:,2),fwd_tri2pts*real(fwd_Ez_sct_hi(:,1)),...
    'LineStyle','None');
colorbar;axis image;view(0,90);
title('Max. Freq. Ez^{sct}');
subplot(4,2,5);
trisurf(...
    fwd_tri,...
    fwd_pts(:,1),fwd_pts(:,2),fwd_tri2pts*real(fwd_Ez_tot_lo(:,1)),...
    'LineStyle','None');
colorbar;axis image;view(0,90);
title('Min. Freq. Ez^{tot}');
subplot(4,2,6);
trisurf(...
    fwd_tri,...
    fwd_pts(:,1),fwd_pts(:,2),fwd_tri2pts*real(fwd_Ez_tot_hi(:,1)),...
    'LineStyle','None');
colorbar;axis image;view(0,90);
title('Max. Freq. Ez^{tot}');
subplot(4,2,7);
trisurf(...
    fwd_tri,...
    fwd_pts(:,1),fwd_pts(:,2),fwd_tri2pts*real(fwd_eps_r),...
    'LineStyle','None');
colorbar;axis image;view(0,90);
title('Re[\epsilon_r]');
subplot(4,2,8);
trisurf(...
    fwd_tri,...
    fwd_pts(:,1),fwd_pts(:,2),fwd_tri2pts*imag(fwd_eps_r),...
    'LineStyle','None');
colorbar;axis image;view(0,90);
title('Im[\epsilon_r]');

%% Plot BIM Results

bim_tri = ReadCppMatrixFromFile([BIM_DIR '/tri.txt']);
bim_tri = bim_tri(:,1:3)+1;
bim_pts = ReadCppMatrixFromFile([BIM_DIR '/pts.txt']);
bim_Fs = ReadCppMatrixFromFile([BIM_DIR '/Fs.txt']);
bim_tri2pts = BuildTri2PointMap(bim_tri);

% Plot contrast and fields after first iteration.
bim_contrast_fig = figure();
bim_contrast_first = ReadCppVectorFromFile([BIM_DIR '/chi_iter_0.txt']);
bim_contrast_final = ReadCppVectorFromFile([BIM_DIR '/chi_iter_' num2str(N_BIM_ITERS-1) '.txt']);

subplot(2,2,1);
trisurf(...
    bim_tri,...
    bim_pts(:,1),bim_pts(:,2),bim_tri2pts*real(bim_contrast_first),...
    'LineStyle','None');
colorbar;axis image;view(0,90);
title('Re[\chi^{0}]');
subplot(2,2,2);
trisurf(...
    bim_tri,...
    bim_pts(:,1),bim_pts(:,2),bim_tri2pts*imag(bim_contrast_first),...
    'LineStyle','None');
colorbar;axis image;view(0,90);
title('Im[\chi^{0}]');
subplot(2,2,3);
trisurf(...
    bim_tri,...
    bim_pts(:,1),bim_pts(:,2),bim_tri2pts*real(bim_contrast_final),...
    'LineStyle','None');
colorbar;axis image;view(0,90);
title(['Re[\chi^{' num2str(N_BIM_ITERS-1) '}]']);
subplot(2,2,4);
trisurf(...
    bim_tri,...
    bim_pts(:,1),bim_pts(:,2),bim_tri2pts*imag(bim_contrast_final),...
    'LineStyle','None');
colorbar;axis image;view(0,90);
title(['Im[\chi^{' num2str(N_BIM_ITERS-1) '}]']);

% Plot contrast and fields after final iteration.
bim_Ez_tot_first_lo = ReadCppVectorFromFile(...
    [BIM_DIR '/Ez_tot_'...
    'iter_0'...
    'freq_0'...
    'tx_0.txt']);
bim_Ez_tot_first_hi = ReadCppVectorFromFile(...
    [BIM_DIR '/Ez_tot_'...
    'iter_0'...
    'freq_' num2str(N_FREQS-1)...
    'tx_0.txt']);
bim_Ez_tot_final_lo = ReadCppVectorFromFile(...
    [BIM_DIR '/Ez_tot_'...
    'iter_' num2str(N_BIM_ITERS-1)...
    'freq_0'...
    'tx_0.txt']);
bim_Ez_tot_final_hi = ReadCppVectorFromFile(...
    [BIM_DIR '/Ez_tot_'...
    'iter_' num2str(N_BIM_ITERS-1) ...
    'freq_' num2str(N_FREQS-1) ...
    'tx_0.txt']);

bim_field_fig = figure();
subplot(2,2,1);
trisurf(bim_tri,...
    bim_pts(:,1),bim_pts(:,2),...
    bim_tri2pts*real(bim_Ez_tot_first_lo),...
    'LineStyle','None');
colorbar;
axis image;
view(0,90);
title('Min Freq. Ez^{tot,0}');
subplot(2,2,2);
trisurf(bim_tri,...
    bim_pts(:,1),bim_pts(:,2),...
    bim_tri2pts*real(bim_Ez_tot_first_hi),...
    'LineStyle','None');
colorbar;
axis image;
view(0,90);
title('Max Freq. Ez^{tot,0}');
subplot(2,2,3);
trisurf(bim_tri,...
    bim_pts(:,1),bim_pts(:,2),...
    bim_tri2pts*real(bim_Ez_tot_final_lo),...
    'LineStyle','None');
colorbar;
axis image;
view(0,90);
title(['Min Freq. Ez^{tot,' num2str(N_BIM_ITERS-1) '}']);
subplot(2,2,4);
trisurf(bim_tri,...
    bim_pts(:,1),bim_pts(:,2),...
    bim_tri2pts*real(bim_Ez_tot_final_hi),...
    'LineStyle','None');
colorbar;
axis image;
view(0,90);
title(['Max Freq. Ez^{tot,' num2str(N_BIM_ITERS-1) '}']);


% Show Fs curve

bim_Fs_fig = figure();
loglog(bim_Fs);
xlabel('Iteration');
ylabel('F_s');
title('BIM Cost Functional');

%% Plot DBIM Results

dbim_tri = ReadCppMatrixFromFile([DBIM_DIR '/tri.txt']);
dbim_tri = dbim_tri(:,1:3)+1;
dbim_pts = ReadCppMatrixFromFile([DBIM_DIR '/pts.txt']);
dbim_Fs = ReadCppMatrixFromFile([DBIM_DIR '/Fs.txt']);
dbim_tri2pts = BuildTri2PointMap(dbim_tri);

% Plot contrast and fields after first iteration.
dbim_contrast_fig = figure();
dbim_contrast_first = ReadCppVectorFromFile([DBIM_DIR '/chi_iter_0.txt']);
dbim_contrast_final = ReadCppVectorFromFile([DBIM_DIR '/chi_iter_' num2str(N_DBIM_ITERS-1) '.txt']);

subplot(2,2,1);
trisurf(...
    dbim_tri,...
    dbim_pts(:,1),dbim_pts(:,2),dbim_tri2pts*real(dbim_contrast_first),...
    'LineStyle','None');
colorbar;axis image;view(0,90);
title('Re[\chi^{0}]');
subplot(2,2,2);
trisurf(...
    dbim_tri,...
    dbim_pts(:,1),dbim_pts(:,2),dbim_tri2pts*imag(dbim_contrast_first),...
    'LineStyle','None');
colorbar;axis image;view(0,90);
title('Im[\chi^{0}]');
subplot(2,2,3);
trisurf(...
    dbim_tri,...
    dbim_pts(:,1),dbim_pts(:,2),dbim_tri2pts*real(dbim_contrast_final),...
    'LineStyle','None');
colorbar;axis image;view(0,90);
title(['Re[\chi^{' num2str(N_DBIM_ITERS-1) '}]']);
subplot(2,2,4);
trisurf(...
    dbim_tri,...
    dbim_pts(:,1),dbim_pts(:,2),dbim_tri2pts*imag(dbim_contrast_final),...
    'LineStyle','None');
colorbar;axis image;view(0,90);
title(['Im[\chi^{' num2str(N_DBIM_ITERS-1) '}]']);

% Plot contrast and fields after final iteration.
dbim_Ez_tot_first_lo = ReadCppVectorFromFile(...
    [DBIM_DIR '/Ez_tot_'...
    'iter_0'...
    'freq_0'...
    'tx_0.txt']);
dbim_Ez_tot_first_hi = ReadCppVectorFromFile(...
    [DBIM_DIR '/Ez_tot_'...
    'iter_0'...
    'freq_' num2str(N_FREQS-1)...
    'tx_0.txt']);
dbim_Ez_tot_final_lo = ReadCppVectorFromFile(...
    [DBIM_DIR '/Ez_tot'...
    '_iter_' num2str(N_DBIM_ITERS-1)...
    'freq_0'...
    'tx_0.txt']);
dbim_Ez_tot_final_hi = ReadCppVectorFromFile(...
    [DBIM_DIR '/Ez_tot_'...
    'iter_' num2str(N_DBIM_ITERS-1) ...
    'freq_' num2str(N_FREQS-1) ...
    'tx_0.txt']);

dbim_field_fig = figure();
subplot(2,2,1);
trisurf(dbim_tri,...
    dbim_pts(:,1),dbim_pts(:,2),...
    dbim_tri2pts*real(dbim_Ez_tot_first_lo),...
    'LineStyle','None');
colorbar;
axis image;
view(0,90);
title('Min Freq. Ez^{tot,0}');
subplot(2,2,2);
trisurf(dbim_tri,...
    dbim_pts(:,1),dbim_pts(:,2),...
    dbim_tri2pts*real(dbim_Ez_tot_first_hi),...
    'LineStyle','None');
colorbar;
axis image;
view(0,90);
title('Max Freq. Ez^{tot,0}');
subplot(2,2,3);
trisurf(dbim_tri,...
    dbim_pts(:,1),dbim_pts(:,2),...
    dbim_tri2pts*real(dbim_Ez_tot_final_lo),...
    'LineStyle','None');
colorbar;
axis image;
view(0,90);
title(['Min Freq. Ez^{tot,' num2str(N_DBIM_ITERS-1) '}']);
subplot(2,2,4);
trisurf(dbim_tri,...
    dbim_pts(:,1),dbim_pts(:,2),...
    dbim_tri2pts*real(dbim_Ez_tot_final_hi),...
    'LineStyle','None');
colorbar;
axis image;
view(0,90);
title(['Max Freq. Ez^{tot,' num2str(N_DBIM_ITERS-1) '}']);

% Show Fs curve

dbim_Fs_fig = figure();
loglog(dbim_Fs);
xlabel('Iteration');
ylabel('F_s');
title('DBIM Cost Functional');
%% Save Output
mkdir('Report');
mkdir('Report/Figs');
now_dir_name = ['Report/Figs/' datestr(now(),30)];
mkdir(now_dir_name);
saveas(bim_contrast_fig,...
    [now_dir_name '/bim_contrast.png']);
saveas(bim_field_fig,...
    [now_dir_name '/bim_fields.png']);
saveas(bim_Fs_fig,...
    [now_dir_name '/bim_Fs.png']);
saveas(dbim_contrast_fig,...
    [now_dir_name '/dbim_contrast.png']);
saveas(dbim_field_fig,...
    [now_dir_name '/dbim_fields.png']);
saveas(dbim_Fs_fig,...
    [now_dir_name '/dbim_Fs.png']);
saveas(fwd_field_fig,...
    [now_dir_name '/fwd_fields.png']);


function [max_index] = GetHighestMatchIndex(dir_name,match_prefix)
if~(dir_name(end) == '/' || dir_name(end) == '\')
    dir_name(end+1) = '/';
end
max_index = -Inf;
dir_struct = dir(dir_name);
for ii = 1:length(dir_struct)
    filename = dir_struct(ii).name;
    if(strncmp(filename,match_prefix,length(match_prefix)))
        underscore_indices = find(filename == '_');
        dot_index = find(filename=='.',1);
        num_string = filename(underscore_indices(end)+1:dot_index-1);
        index = str2num(num_string);
        max_index = max(index,max_index);
    end
end
end